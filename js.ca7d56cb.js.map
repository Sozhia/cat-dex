{"version":3,"sources":["js/index.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","Array","from","test","isArray","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","selectedBreedName","selectedBreedID","catBreedInfoURL","breedsJSON","breeds","storeJSON","_storeJSON","_callee","request","response","_callee$","_context","Request","fetch","json","onLoad","_onLoad","_callee2","_callee2$","_context2","map","cat","id","reference_image_id","populateDropdown","document","getElementById","addEventListener","handleSelection","console","log","dropdown","_ref","_ref2","option","createElement","textContent","appendChild","event","target","options","selectedIndex","text","concat","findBreed","breedID","urlAPI","Response","breedData","showBreed","error","showError","innerHTML","toUpperCase","getImageURL","getRating","adaptability","child_friendly","dog_friendly","energy_level","social_needs","imageID","rating","result"],"mappings":"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","file":"js.ca7d56cb.js","sourceRoot":"../src","sourcesContent":["\r\nconst catBreedInfoURL = \"https://api.thecatapi.com/v1/breeds\"; \r\nlet breedsJSON = [];\r\nlet breeds = [];\r\nlet selectedBreedName;\r\nlet selectedBreedID;\r\n\r\n/**\r\n * The function `storeJSON` asynchronously fetches JSON data from a specified URL.\r\n * @returns The `storeJSON` function is returning a Promise that resolves to the\r\n * JSON data fetched from the `catBreedInfoURL`.\r\n */\r\nasync function storeJSON() {\r\n  const request = new Request(catBreedInfoURL);\r\n  const response = await fetch(request);\r\n\r\n  return await response.json();\r\n}\r\n\r\n/**\r\n * The `onLoad` function asynchronously loads JSON data, maps it to extract\r\n * specific information(breedid, breedname and imgid),\r\n * populates a dropdown menu, adds an event listener for\r\n * dropdown changes, and logs the extracted data.\r\n */\r\nasync function onLoad() {\r\n  breedsJSON = await storeJSON(); \r\n\r\n  breeds = breedsJSON.map(cat => [cat.id, cat.name, cat.reference_image_id]);\r\n\r\n  populateDropdown();\r\n\r\n  const dropdown = document.getElementById('cat-breeds');\r\n  dropdown.addEventListener('change', handleSelection);\r\n\r\n  console.log(breeds);\r\n}\r\n\r\n/**\r\n * The function `populateDropdown` populates dropdown menu with options based on\r\n * the `breeds` array.\r\n */\r\nfunction populateDropdown() {\r\n  const dropdown = document.getElementById('cat-breeds');\r\n  \r\n  breeds.forEach(([id, name]) => {\r\n    const option = document.createElement('option');\r\n    option.value = id;\r\n    option.textContent = name; \r\n    dropdown.appendChild(option);\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * The function `handleSelection` captures the selected breed ID and name from a\r\n * dropdown menu and logs the selected breed information.\r\n * @param event - The `event` parameter in the `handleSelection` function is an\r\n * object that represents the event that occurred, such as a user selecting an\r\n * option from a dropdown menu. It contains information about the event, including\r\n * the target element that triggered the event (in this case, a dropdown menu), the\r\n * type\r\n */\r\nfunction handleSelection(event) {\r\n  selectedBreedID = event.target.value; \r\n  selectedBreedName = event.target.options[event.target.selectedIndex].text; \r\n\r\n  console.log(`Selected Breed: ${selectedBreedName} (ID: ${selectedBreedID})`);\r\n  findBreed(selectedBreedID);\r\n}\r\n\r\nonLoad();\r\n\r\n\r\n/**\r\n * The function `findBreed` makes a fetch request to the Cat API to retrieve\r\n * information about a specific cat breed using the provided `breedID`.\r\n * @param breedID - The `breedID` parameter in the `findBreed` function is used to\r\n * specify the ID of the cat breed that you want to retrieve information about from\r\n * the Cat API. This ID is used to construct the URL for the API request to fetch\r\n * data about the specific cat breed.\r\n */\r\nfunction findBreed(breedID){\r\n  let urlAPI = `https://api.thecatapi.com/v1/breeds/${breedID}`;\r\n\r\n  fetch(urlAPI)\r\n  .then(Response => Response.json())\r\n  .then(breedData => showBreed(breedData))\r\n  .catch(error => showError(error));\r\n}\r\n\r\n\r\n/**\r\n * The function `showBreed` displays information about a specific dog breed,\r\n * including its name, image, and ratings for various characteristics.\r\n * @param breedData - The `showBreed` function takes in a `breedData` object as a\r\n * parameter. This object likely contains information about a specific dog breed,\r\n * such as its name, image URL, and various ratings related to adaptability,\r\n * child-friendliness, dog-friendliness, energy level,\r\n */\r\nfunction showBreed(breedData){\r\n  let infoDivID = `breedInfo`;\r\n  let infoDiv = document.getElementById(infoDivID);\r\n\r\n  infoDiv.innerHTML = `\r\n  <h2>${breedData.name.toUpperCase()}</h2>\r\n  <img class = \"breedImg\" src=\"${getImageURL(breedData.reference_image_id)}\" alt=\"${selectedBreedName}\">\r\n  <p>Affection:${getRating(breedData.adaptability)}</p>\r\n  <p>Child friendly:${getRating(breedData.child_friendly)}</p>\r\n  <p>Dog friendly:${getRating(breedData.dog_friendly)}</p>\r\n  <p>Energy:${getRating(breedData.energy_level)}</p>\r\n  <p>Social needs:${getRating(breedData.social_needs)}</p>\r\n  `;\r\n}\r\n\r\n/**\r\n * The function getImageURL takes an imageID as input and returns a URL for a cat\r\n * image with that ID.\r\n * @param imageID - The `imageID` parameter is a unique identifier for a specific\r\n * image in the Cat API.\r\n * @returns a URL for a cat image based on the provided `imageID`.\r\n */\r\nfunction getImageURL(imageID){\r\n  console.log(imageID);\r\n  return `https://cdn2.thecatapi.com/images/${imageID}.jpg`;\r\n}\r\n\r\n/**\r\n * The function showError logs an error message to the console.\r\n * @param error - The `error` parameter in the `showError` function is used to pass\r\n * an error message or object that needs to be displayed or logged.\r\n */\r\nfunction showError(error){\r\n  console.log(error);\r\n}\r\n\r\n/**\r\n * The function getRating returns a set of (filled/empty) stars.\r\n * @param {*} rating - Expected number out of 5\r\n * @returns a String of (filled/empty) stars.\r\n */\r\nfunction getRating(rating) {\r\n  let result = \"\";\r\n\r\n  switch (rating) {\r\n    case 5:\r\n      result = \"★★★★★\";\r\n      break;\r\n    case 4:\r\n      result = \"★★★★☆\";\r\n      break;\r\n    case 3:\r\n      result = \"★★★☆☆\";\r\n      break;\r\n    case 2:\r\n      result = \"★★☆☆☆\";\r\n      break;\r\n    case 1:\r\n      result = \"★☆☆☆☆\";\r\n      break;\r\n    case 0:\r\n      result = \"☆☆☆☆☆\"; \r\n      break;\r\n    default:\r\n      result = \"Invalid rating\"; \r\n  }\r\n\r\n  return result;\r\n} \r\n\r\n\r\n"]}